# https://qiita.com/s_araki/items/32aded38dca734c0e02d
# yamlのリスト表記もokのはずだが、vscodeではバグ？で認識しないため単一の文字列とする
Checks:
  - -*
  - cert-*
  - clang-analyzer-*
  - concurrency-*
  - cppcoreguidelines-*
  - -cppcoreguidelines-avoid-magic-numbers # マジックナンバー
  - -cppcoreguidelines-avoid-do-while # do-while文を許可
  - -cppcoreguidelines-pro-bounds-array-to-pointer-decay # C言語スタイルの配列変数をポインタとして使う
  - -cppcoreguidelines-pro-bounds-constant-array-index # std::arrayの添え字として変数を許容
  - -cppcoreguidelines-pro-bounds-pointer-arithmetic # ポインタ変数から添え字アクセスできるように
  - -cppcoreguidelines-pro-type-union-access # TODO: vec3の要素にアクセスできるように？
  - -cppcoreguidelines-avoid-const-or-ref-data-members # TODO: 参照型のメンバ変数を許容
  - -cppcoreguidelines-init-variables # 変数宣言時の未初期化を許容
  - -cppcoreguidelines-pro-type-reinterpret-cast # reinterpret_castを許可
  - -cppcoreguidelines-non-private-member-variables-in-classes # misc-non-private-member-variables-in-classesと全く同じなため無効化
  - -cppcoreguidelines-c-copy-assignment-signature # misc-unconventional-assign-operatorと全く同じなため無効化
  - -cppcoreguidelines-avoid-c-arrays # modernize-avoid-c-arraysと全く同じなため無効化
  - linuxkernel-*
  - llvm-*
  - -llvm-include-order #マクロによるインクルード時、見かけの順序を保つ
  - misc-*
  - -misc-no-recursion
  - -misc-non-private-member-variables-in-classes # publicおよびprotectedメンバ変数を無制限に許容
  - modernize-*
  - -modernize-use-trailing-return-type
  - -modernize-avoid-c-arrays # C言語スタイルの配列を許容
  - performance-*
  - portability-*
  - readability-*
  - -readability-isolate-declaration
  - -readability-magic-numbers #マジックナンバー
  - -readability-uppercase-literal-suffix # リテラルの小文字サフィックス
WarningsAsErrors: ""
HeaderFilterRegex: 'source.*\.(hpp|h)'
FormatStyle: file
CheckOptions: # https://qiita.com/tenmyo/items/9753609385c7e4ff5222
  cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor: true # デストラクタをデフォルトのままvirtual指定したとき、その他の暗黙の関数の警告を出さない
  cppcoreguidelines-pro-type-static-cast-downcast.StrictMode: false # 多相でないクラスの基底から派生へのstatic_castを許容
  readability-braces-around-statements.ShortStatementLines: 1  # 単一行のif文（やその他構文）は中括弧付与を免除
  readability-identifier-naming.ClassCase: CamelCase
  readability-identifier-naming.EnumCase: CamelCase
  readability-identifier-naming.FunctionCase: lower_case
  readability-identifier-naming.MemberCase: lower_case
  readability-identifier-naming.PrivateMemberCase: lower_case
  readability-identifier-naming.PrivateMemberSuffix: _
  readability-identifier-naming.ProtectedMemberCase: lower_case
  readability-identifier-naming.ProtectedMemberSuffix: _
  readability-identifier-naming.ParameterCase: lower_case
  readability-identifier-naming.UnionCase: CamelCase
  readability-identifier-naming.VariableCase: lower_case
  readability-identifier-naming.GlobalConstantCase: UPPER_CASE # グローバル定数
  readability-identifier-naming.ConstexprFunctionCase: UPPER_CASE # constexpr関数
  readability-identifier-naming.ConstexprVariableCase: lower_case # constexpr変数
  readability-identifier-naming.TypeTemplateParameterCase: CamelCase # テンプレート型引数
  readability-identifier-naming.ValueTemplateParameterCase: lower_case # 非型テンプレート引数
  readability-identifier-length.IgnoredVariableNames: ss
  readability-identifier-length.IgnoredParameterNames: os
  readability-identifier-length.MinimumParameterNameLength: 1
  readability-identifier-length.MinimumVariableNameLength: 1
  readability-identifier-length.MinimumLoopCounterNameLength: 1
  readability-implicit-bool-conversion.AllowIntegerConditions: true # nullptr判定
  readability-implicit-bool-conversion.AllowPointerConditions: true # 非ゼロ判定
